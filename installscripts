#!/bin/bash
#

## installscripts
# Opção --help

appName=${0##*'/'}
source ./sbsupport "--source"

#fdocuments="/opt/local/bashscripts/" # Destino da lista de script instalados.
#scriptsinfo=$fdocuments"scriptsinfo" # Lista de scripts já instalados.
#scriptsinfo=`f_documents`"scriptsinfo" # Lista de scripts já instalados.
#scriptdestino"/opt/local/bin/"

if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo ""
    echo -e "\033[32;1mSinopse:\033[m"
    echo -e "\t$appName -h | --help | source_file_script | \"\""
    echo ""
    echo -e "\033[32;1mDescrição:\033[m"
    echo -e '\t\033[1m-h\033[m ou \033[1m--help\033[m : esta ajuda.'
    echo -e '\t\033[1msource_file_script\033[m : nome do arquivo com script a ser instalado;'
    echo -e '\t\033[1mnenhum_argumento\033[m : para instalar os scripts que estiverem listados'
    echo -e '\t\t\t   em \033[1mscriptlist.txt\033[m'
    echo ""
    echo -e "\t    \033[1minstallscript\033[m instala, se indicado, um script bash ou, se"
    echo -e "\tnão houver uma indicação, será instalado os scripts que estiverem"
    echo -e "\tlistados no arquivo 'scriptlist' que deve estar no mesmo diretório de"
    echo -e "\t'installscripts'. A instalação será no diretório \033[1m/usr/bin\033[m e o torna"
    echo -e "\texecutável."
    echo -e "\t    Este script exige o uso do \033[1msudo\033[m."
    echo -e "\033[32;1mObservação:\033[m"
    echo -e "\t    Este script de instalação devera ser substituido pelo formato"
    echo -e "\tde arquivo de comandos em lote 'make'."

    sctlist=$documents$list
    #if  [ ${#sctlist} -gt 1 ] && [ -f $sctlist ]; then
    if  [ ! ${sctlist} = "" ] && [ -e $sctlist ]; then
        echo -e "\t    Comandos pertencentes a este pacote de scripts:"
        echo -e "\t    \033[1m"`cat $sctlist`"\033[m"
    fi

    echo -e "\033[32;1mExemplos:\033[m"
    echo -e "\tsudo $appName"
    echo -e "\tsudo $appName fls"
    echo -e "\tsudo $appName /fe"
    echo -e "\tsudo $appName ./scutup"
    echo -e "\tsudo $appName ./dir/scuttail"
    echo -e "\tsudo $appName ~/ssube"
    echo -e "\t$appName -h"
    echo ""
    exit
fi

### Opção para apresentar o arquivo 'reademe.txt'
if  [ "$1" = "-r" ] || [ "$1" = "--read" ]; then
    scriptsread=$documents$readme
    if [ ! -f $scriptsread ]; then
        scriptsread=$readme
    fi
    if [ -f $scriptsread ]; then
        IFS="
"
        echo ""
        echo "====== Conteúdo do arquivo 'readme' ======"
        echo ""
        LINES=`cat $scriptsread 2>&1`
        for LINE in $LINES; do
            echo $LINE
        done
        echo ""
        echo "==========================================="
        echo ""
    else
        echo "Arquivo 'readme.txt' não encontrado em `sh sbsupport -d`"
        echo ""
    fi
    exit
fi

if [ "$1" = "-p" ]; then
    # Ajusta o $PATH
    setupPath ${binpath}
    # [ $? = 0 ] && echo "Retono sem erro." || echo "Retorno com erro."
fi

# if  [ "$1" = "-R" ] || [ "$1" = "--root" ]; then
#     `sudo chmod +x ./installscripts`
#     [ $? = 0 ] && `sudo chown root:wheel ./installscripts`
#     exit
# fi

f_scutup() {

    # let count=0
    # ARG="$1"
    # #echo $ARG
    # let len1=${#ARG}
    # let len2=${#2}
    # let c=0
    # ## Para compatibilidade com 'dash' do Raspberry
    # let i=$len1-1
    # while (( $i >= 0 )) ; do
    #     if [ "${ARG:$i:$len2}" = "$2" ]; then
    #         if [ $c -eq $count ]; then
    #             ARG=${ARG:$i+$len2}
    #             break
    #         fi
    #         ((c++))
    #     fi
    #     ((i--))
    # done
    #
    # echo $ARG

    echo=${1##*$2}

}

f_scuttail() {

    # let count=0
    # ARG="$1"
    # let len1=${#ARG}
    # let len2=${#2}
    # let c=0
    # ## Para compatibilidade com 'dash' do Raspberry
    # let i=$len1-1
    # while (( $i >= 0 )) ; do
    #     if [ "${ARG:$i:$len2}" = "$2" ]; then
    #         if [ $c -eq $count ]; then
    #             ARG=${ARG:0:$i}
    #             break
    #         fi
    #         ((c++))
    #     fi
    #     ((i--))
    # done
    #
    # echo $ARG

    echo=${1%$2*}


}

f_incluiNaLista() {

    if [ -e $1".info" ]; then
        `cp -fX $1".info" $documents$1".info"`
    fi

    sctlist=$documents$list
    if [ -f $sctlist ]; then
        scripts=`cat $sctlist`
        for scriptname in $scripts; do
            if [ $scriptname = $1 ]; then
                # Se o nome do script é encontrano em 'scriptsinfo' então retorna.
                return 0
            fi
        done
    elif [ ! -d $documents ]; then
        `mkdir -p $documents`
    fi
    echo "$1" >> $sctlist
    return 0
}

f_installscript() {

    # Verifica o caminho de onde deverá ser instalado o script,
    # se não for indicado algum caminho, então é acressentado
    # um ponto e barra para ser entendido que o caminho é o
    # o próprio de onde está sendo executado o 'installscripts'.
    sctname=${1##*'/'} # `f_scutup $1 "/"`   
    sctpath=${1%'/'*}  # `f_scuttail $1 "/"` 
    if [ "$sctname" = "$sctpath" ]; then
        sctpath="./"
    fi

    # Cria o destino se ainda não existir.
    if [ ! -d $binpath ]; then
        `mkdir -p $binpath`
    fi

    # Copia o script de acordo com o caminho onde ele está e
    # o caminho para onde deve ser copiado.
    `cp -fX $sctpath$sctname $binpath$sctname`
    [ $? = 0 ] && `chmod +x $binpath$sctname` # /usr/bin/$sctname`
    # [ $? = 0 ] && `chown root:wheel $destino$sctname` # /usr/bin/bashscripts/$sctname`
    # [ $? = 0 ] && echo "chmod +x com sucesso"
    # Se a cópia for bem sucedida o nome do script é enviado para se incluido em uma lista
    if [ $? = 0 ]; then
        f_incluiNaLista $1
        esps=". . . . . . . . . ."
        tam1=${#1}
        esps=${esps:tam1}        
    	echo -e "\033[1m$1\033[m $esps instalado com sucesso."
    else
        echo " ? ? Erro na instalação. ? ?"
        echo -e "Esperimente usar a permissão de super usuário (\033[1msudo\033[m)."
        exit
    fi
    #echo " "
}

#########  Rotina principal  #########

# Verifica se o primeiro argumento é um diretório.
if [ ! "$1" = "" ] && [ -d $1 ]; then
    sourcedir=$1
    shift
else
    sourcedir="./"
fi

if [ "$1" = "" ]; then

    # Instala cada um dos scripts listados em 'slist'.
    slist=$sourcedir$list
    if [ -f $slist ]; then
        scripts=`cat $slist`
        for scriptname in $scripts; do
            f_installscript $scriptname
        done
    else
        echo "Lista de scripts não encontrado."
        echo "- Crie um arquivo contendo o nome dos arquivos de scripts a serem instalados;"
        echo "- só é aceitável um nome por linha;"
        echo "- nomeie o arquivo para 'scriptlist';"
        echo "- salve o arquivo no mesmo diretório de 'installscripts'."
        exit
    fi
else
    echo "= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = ="
    echo "=  Não está implementadoa a instalação individual de scripts. ="
    echo "= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = ="
    exit
    # if [ -f $1 ]; then
    #      f_script $1
    # else
    #     echo "O argumento '$1' não é válido."
    #     exit
    # fi
fi

# A cada instalação o arquivo 'readme.txt' e 'sbsupport' é atualizado.
f=$sourcedir$readme
if [ -f $f ]; then
    `cp $f $documents`
fi
#echo $f

# f=$sourcedir$(f_sbsupport)
# if [ -f $f ]; then
#     `cp -p $f $(f_scripts)`
# fi

# Ajusta o $PATH
setupPath ${binpath}






